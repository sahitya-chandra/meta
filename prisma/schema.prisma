// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String       @id @default(cuid())
  email     String       @unique
  name      String?
  password  String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt

  sentRequests     FriendRequest[] @relation("SentRequests")
  receivedRequests FriendRequest[] @relation("ReceivedRequests")
  friendsA         Friend[]        @relation("FriendsA")
  friendsB         Friend[]        @relation("FriendsB")
  sentMessages     Message[]       @relation("SentMessages")
  receivedMessages Message[]       @relation("ReceivedMessages")
}

model FriendRequest {
  id          String   @id @default(cuid())
  requester   User     @relation("SentRequests", fields: [requesterId], references: [id])
  requesterId String
  addressee   User     @relation("ReceivedRequests", fields: [addresseeId], references: [id])
  addresseeId String
  status      RequestStatus @default(PENDING)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum RequestStatus {
  PENDING
  ACCEPTED
  REJECTED
}

model Friend {
  id      String @id @default(cuid())
  userA   User   @relation("FriendsA", fields: [userAId], references: [id])
  userAId String
  userB   User   @relation("FriendsB", fields: [userBId], references: [id])
  userBId String
  createdAt DateTime @default(now())

  @@unique([userAId, userBId])
}

model Message {
  id         String   @id @default(cuid())
  sender     User     @relation("SentMessages", fields: [senderId], references: [id])
  senderId   String
  receiver   User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
  receiverId String
  content    String
  createdAt  DateTime @default(now())
}
